name: Guix Build CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  guix-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install GNU Guix non-interactively (SSR safe)
        run: |
          # Download the Guix install script to a temp file
          curl -fsSL https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh -o /tmp/guix-install.sh
          # Execute the script as root, non-interactively
          printf '\n' | sudo bash /tmp/guix-install.sh

      - name: Setup Guix environment
        run: |
          # Use $(whoami) for reliable user detection instead of $USER
          export PATH="/var/guix/profiles/per-user/$(whoami)/current-guix/bin:$PATH"
          # Start the guix daemon
          sudo systemctl start guix-daemon || \
            sudo /var/guix/profiles/per-user/root/current-guix/bin/guix-daemon \
            --build-users-group=guixbuild &
          # Update guix
#          guix pull --verbosity=1

      - name: Build with Guix
        id: guix-build
        run: |
          # Use $(whoami) for consistent PATH construction
          export PATH="/var/guix/profiles/per-user/$(whoami)/current-guix/bin:$PATH"
          # Ensure guix daemon is accessible
          guix describe
          # Build the package with detailed logging
          guix build -f guix.scm --verbosity=3 2>&1 | tee guix-build.log
        continue-on-error: true

      - name: Capture Guix build logs
        if: always()
        run: |
          # Create directory for logs
          mkdir -p guix-logs
          # Copy the build log
          if [ -f guix-build.log ]; then
            cp guix-build.log guix-logs/
          fi
          # Try to find and copy derivation logs
          if [ -d /var/log/guix/drvs ]; then
            sudo find /var/log/guix/drvs -name "*.drv.gz" -type f \
              -exec sh -c 'sudo cp "$1" guix-logs/$(basename "$1")' _ {} \; \
              2>/dev/null || true
          fi

      - name: Upload Guix build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: guix-build-logs
          path: guix-logs/
          retention-days: 7

      - name: Fail if build failed
        if: steps.guix-build.outcome == 'failure'
        run: |
          echo "Guix build failed. Check the uploaded artifacts for detailed logs."
          exit 1
